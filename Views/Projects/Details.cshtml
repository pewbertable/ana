@model AnastasiiaPortfolio.ViewModels.ProjectDetailsViewModel

@{
    ViewData["Title"] = Model.Project?.Title ?? "Project Details";
}

<div class="container py-5">
    @if (Model.Project != null)
    {
        <div class="row">
            <div class="col-lg-8">
                <img src="@Model.Project.ImageUrl" alt="@Model.Project.Title" class="img-fluid rounded shadow-sm mb-4">
                <h1 class="mb-4">@Model.Project.Title</h1>
                <div class="mb-4">
                    <span class="badge bg-primary me-2">@Model.Project.Category</span>
                    <span class="text-muted">Completed: @Model.Project.DateCompleted.ToString("MMMM yyyy")</span>
                </div>
                <div class="mb-4">
                    <h5>Description</h5>
                    <p>@Model.Project.Description</p>
                </div>
                <div class="mb-4">
                    <h5>Technologies Used</h5>
                    <div class="d-flex flex-wrap gap-2">
                        @foreach (var tech in Model.Project.Technologies.Split(','))
                        {
                            <span class="badge bg-secondary">@tech.Trim()</span>
                        }
                    </div>
                </div>
                <div class="d-flex gap-3">
                    @if (!string.IsNullOrEmpty(Model.Project.ProjectUrl))
                    {
                        <a href="@Model.Project.ProjectUrl" class="btn btn-primary" target="_blank">
                            <i class="fas fa-external-link-alt me-2"></i>Live Demo
                        </a>
                    }
                    @if (!string.IsNullOrEmpty(Model.Project.GitHubUrl))
                    {
                        <a href="@Model.Project.GitHubUrl" class="btn btn-outline-dark" target="_blank">
                            <i class="fab fa-github me-2"></i>GitHub
                        </a>
                    }
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Project Details</h5>
                        <ul class="list-unstyled">
                            <li class="mb-2">
                                <i class="fas fa-calendar-alt me-2"></i>
                                <strong>Date Completed:</strong> @Model.Project.DateCompleted.ToString("MMMM yyyy")
                            </li>
                            <li class="mb-2">
                                <i class="fas fa-tag me-2"></i>
                                <strong>Category:</strong> @Model.Project.Category
                            </li>
                            @if (!string.IsNullOrEmpty(Model.Project.ProjectUrl))
                            {
                                <li class="mb-2">
                                    <i class="fas fa-link me-2"></i>
                                    <strong>Live Demo:</strong>
                                    <a href="@Model.Project.ProjectUrl" target="_blank">View Project</a>
                                </li>
                            }
                            @if (!string.IsNullOrEmpty(Model.Project.GitHubUrl))
                            {
                                <li class="mb-2">
                                    <i class="fab fa-github me-2"></i>
                                    <strong>GitHub:</strong>
                                    <a href="@Model.Project.GitHubUrl" target="_blank">View Code</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-12">
                <h3 class="mb-4">Reviews</h3>
                @if (Model.Reviews.Any())
                {
                    foreach (var review in Model.Reviews)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h5 class="card-title">@review.Title</h5>
                                        <div class="mb-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                            }
                                        </div>
                                        <p class="card-text">@review.Comment</p>
                                        @if (!string.IsNullOrEmpty(review.Pros))
                                        {
                                            <div class="mb-2">
                                                <strong>Pros:</strong>
                                                <p class="mb-0">@review.Pros</p>
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(review.Cons))
                                        {
                                            <div class="mb-2">
                                                <strong>Cons:</strong>
                                                <p class="mb-0">@review.Cons</p>
                                            </div>
                                        }
                                        <div class="d-flex gap-3">
                                            <button class="btn btn-sm btn-outline-success vote-btn" data-review-id="@review.Id" data-is-helpful="true">
                                                <i class="fas fa-thumbs-up"></i> <span class="helpful-count">@review.HelpfulCount</span>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger vote-btn" data-review-id="@review.Id" data-is-helpful="false">
                                                <i class="fas fa-thumbs-down"></i> <span class="not-helpful-count">@review.NotHelpfulCount</span>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="d-flex flex-column align-items-end">
                                        <small class="text-muted mb-2">@review.CreatedAt.ToString("MMMM d, yyyy")</small>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <form asp-controller="Reviews" asp-action="Delete" asp-route-id="@review.Id" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this review?')">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No reviews yet. Be the first to review this project!</p>
                }

                @if (User.Identity?.IsAuthenticated == true)
                {
                    <a asp-controller="Reviews" asp-action="Create" asp-route-projectId="@Model.Project.Id" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add Review
                    </a>
                }
                else
                {
                    <a asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Context.Request.Path" class="btn btn-primary">
                        <i class="fas fa-sign-in-alt me-2"></i>Login to Review
                    </a>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            Project details could not be loaded.
        </div>
    }
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            $.ajaxSetup({
                headers: {
                    RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                }
            });

            $('.vote-btn').click(function() {
                var btn = $(this);
                var reviewId = btn.data('review-id');
                var isHelpful = btn.data('is-helpful');
                var token = $('input[name="__RequestVerificationToken"]').val();

                var helpfulCountSpan = btn.closest('.card-body').find('.helpful-count');
                var notHelpfulCountSpan = btn.closest('.card-body').find('.not-helpful-count');

                $.ajax({
                    url: '/Reviews/Vote',
                    type: 'POST',
                    data: {
                        reviewId: reviewId,
                        isHelpful: isHelpful,
                        __RequestVerificationToken: token
                    },
                    success: function(response) {
                        helpfulCountSpan.text(response.helpfulCount);
                        notHelpfulCountSpan.text(response.notHelpfulCount);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error("Vote failed: ", textStatus, errorThrown);
                        alert('Failed to record vote. You might need to login again.');
                    }
                });
            });
        });
    </script>
}

<style>
    .badge.bg-primary {
        background-color: #2B2B2B;
        color: #FFFFFF;
    }

    .text-muted {
        color: #B3B3B3;
    }

    .btn-outline-dark {
        border-color: #2B2B2B;
        color: #2B2B2B;
    }

    .btn-outline-dark:hover {
        background-color: #2B2B2B;
        color: #FFFFFF;
    }
</style> 