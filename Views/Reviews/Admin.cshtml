@model IEnumerable<AnastasiiaPortfolio.Models.Review>
@using AnastasiiaPortfolio.Models // For ApplicationUser

@{
    ViewData["Title"] = "Review Management";
    // Cast ViewBag dictionaries for easier use
    var usersLookup = ViewBag.UsersLookup as Dictionary<Guid, string> ?? new Dictionary<Guid, string>();
    var projectsLookup = ViewBag.ProjectsLookup as Dictionary<Guid, string> ?? new Dictionary<Guid, string>();
    var allUsers = ViewBag.Users as List<ApplicationUser> ?? new List<ApplicationUser>();
}

<div class="container">
    <h1 class="my-4">Review Management</h1>

    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="userId" class="form-label">Filter by User</label>
                    <select name="userId" id="userId" class="form-select">
                        <option value="">All Users</option>
                        @foreach (var user in allUsers) // Use casted list
                        {
                            <option value="@user.Id" selected="@(ViewBag.SelectedUserId == user.Id)">
                                @(user.UserName ?? user.Email) @* Display username or email *@
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <div class="form-check mt-4">
                        <input type="checkbox" name="showHidden" value="true" class="form-check-input"
                               id="showHidden" @(ViewBag.ShowHidden ? "checked" : "")>
                        <label class="form-check-label" for="showHidden">Show Hidden Reviews</label>
                    </div>
                </div>
                <div class="col-md-4 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <a asp-action="Admin" class="btn btn-secondary ms-2">Clear Filters</a>
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        @foreach (var review in Model)
        {
            <div class="col-md-6 mb-4">
                <div class="card h-100 @(review.IsHidden ? "border-warning" : "")">
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <div>
                                <h5 class="card-title mb-1">
                                    <!-- Use ViewBag lookup for UserName, checking for null ID -->
                                    @(review.UserId.HasValue && usersLookup.ContainsKey(review.UserId.Value) ? usersLookup[review.UserId.Value] : "Unknown User")
                                </h5>
                                <small class="text-muted d-block">
                                    @review.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                </small>
                            </div>
                            <div class="text-nowrap">
                                @if (review.IsHidden)
                                {
                                    <span class="badge bg-warning me-2">Hidden</span>
                                }
                                @if (review.IsVerified)
                                {
                                     <span class="badge bg-success me-2">Verified</span>
                                }
                                 @if (review.IsFeatured)
                                {
                                     <span class="badge bg-info">Featured</span>
                                }
                            </div>
                        </div>
                        <div class="mb-2">
                            <strong>Project:</strong>
                            <!-- Use ViewBag lookup for Project Title, checking for null ID -->
                             <a asp-controller="Projects" asp-action="Details" asp-route-id="@review.ProjectId">
                                 @(review.ProjectId.HasValue && projectsLookup.ContainsKey(review.ProjectId.Value) ? projectsLookup[review.ProjectId.Value] : "Unknown Project")
                             </a>
                        </div>
                        <div class="mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                            }
                            <span class="ms-2">(@review.Rating)</span>
                        </div>
                        @if (!string.IsNullOrEmpty(review.Title))
                        {
                             <h6 class="card-subtitle mb-2 text-muted">@review.Title</h6>
                        }
                        <p class="card-text flex-grow-1">@review.Comment</p>
                        @if (!string.IsNullOrEmpty(review.Pros))
                        {
                            <p class="card-text small text-success mb-1"><strong>Pros:</strong> @review.Pros</p>
                        }
                        @if (!string.IsNullOrEmpty(review.Cons))
                        {
                             <p class="card-text small text-danger mb-1"><strong>Cons:</strong> @review.Cons</p>
                        }
                        <div class="mt-auto pt-3 border-top">
                             <!-- Edit button linking to Review Edit Action -->
                            <a asp-action="Edit" asp-route-id="@review.Id" class="btn btn-secondary btn-sm">Edit</a>
                            <!-- Toggle Hide/Unhide Form -->
                            <form asp-action="ToggleHide" asp-route-id="@review.Id" asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm @(review.IsHidden ? "btn-success" : "btn-warning")">
                                    @(review.IsHidden ? "Unhide" : "Hide")
                                </button>
                            </form>
                             <!-- Delete Form -->
                            <form asp-action="Delete" asp-route-id="@review.Id" asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger btn-sm"
                                        onclick="return confirm('Are you sure you want to delete this review and associated votes?')">
                                    Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div> 